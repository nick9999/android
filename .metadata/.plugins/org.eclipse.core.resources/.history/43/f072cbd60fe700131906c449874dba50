package com.example.imageloaderfromurl;

import java.util.Collections;
import java.util.Map;
import java.util.WeakHashMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import android.content.Context;
import android.graphics.Bitmap;
import android.widget.ImageView;

public class ImageLoader {
	MemoryCache memoryCache = new MemoryCache();
	FileCache fileCache;
	private Map<ImageView, String> imageViews = Collections
			.synchronizedMap(new WeakHashMap<ImageView, String>());
	ExecutorService executorService;

	public ImageLoader(Context context) {
		fileCache = new FileCache(context);
		executorService = Executors.newFixedThreadPool(5);
	}

	int stub_id = R.drawable.ic_launcher;

	public void DisplayImage(String url,int loader,ImageView imageView)
	{
		stub_id=loader;
		imageView.put(imageView,url);
		Bitmap bitmap=memoryCache.get(url);
        if(bitmap!=null)
            imageView.setImageBitmap(bitmap);
        else
        {
            queuePhoto(url, imageView);
            imageView.setImageResource(loader);
        }
        private void queuePhoto(String url1 , ImageView imageView1)
        {
        	PhotoToLoad p=new PhotoToLoad(url1, imageView1);
            executorService.submit(new PhotosLoader(p));
        }
        private Bitmap getBitmap(String url2)
        {
            File f=fileCache.getFile(url2);
      
            //from SD cache
            Bitmap b = decodeFile(f);
            if(b!=null)
                return b;
      
            //from web
            try {
                Bitmap bitmap=null;
                URL imageUrl = new URL(url);
                HttpURLConnection conn = (HttpURLConnection)imageUrl.openConnection();
                conn.setConnectTimeout(30000);
                conn.setReadTimeout(30000);
                conn.setInstanceFollowRedirects(true);
                InputStream is=conn.getInputStream();
                OutputStream os = new FileOutputStream(f);
                Utils.CopyStream(is, os);
                os.close();
                bitmap = decodeFile(f);
                return bitmap;
            } catch (Exception ex){
               ex.printStackTrace();
               return null;
            }
        }
      
        
	}
}
